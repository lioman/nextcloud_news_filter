stages:
  - test
  - release
  - deploy

image: python:3.11-bookworm
before_script:
  - pip install pdm

variables:
  SERVERLESS_RELEASE_FILE: nextcloud_news_filter-$CI_COMMIT_TAG.zip

test:
  stage: test
  script:
    - pdm install --dev
    - pdm test

lint:
  stage: test
  script:
    - pdm install --dev
    - pdm lint

build-scaleway-zip:
  stage: release
  environment: production

  before_script:
    - apt-get update
    - apt-get install zip
    - pip install pdm
  script:
    - cd src
    - pdm export --prod -o requirements.txt
    - pip install -r requirements.txt --target ./package
    - zip -r ../$SERVERLESS_RELEASE_FILE nextcloud_news_filter/ package
  artifacts:
    paths:
      - ./$SERVERLESS_RELEASE_FILE
  only:
    - tags
    - main

publish-package:
  stage: release
  environment: production
  script:
    - pdm publish --username __token__
  dependencies: []
  only:
    - tags
    - main

deploy-nextcloud-news-filter:
  stage: deploy
  before_script: []
  image:
    name: scaleway/cli:2.24
    entrypoint: [""]
  environment: production
  script:
    - echo $SCW_DEFAULT_REGION
    - /scw function deploy name=nextcloud-news-filter namespace-id=$NAMESPACE_UUID runtime=python311 zip-file=./$SERVERLESS_RELEASE_FILE
  dependencies:
    - build-scaleway-zip
  only:
    - main

deploy-cron-config:
  stage: deploy
  image:
    name: scaleway/cli:2.24
    entrypoint: [""]
  environment: production
  script:
    - /scw function cron update $CRON_UUID args="`cat filter.json`" schedule="0/30 7-22 * * *"
    - /scw function function update $FUNCTION_UUID handler=nextcloud_news_filter.handler environment-variables.NEXTCLOUD_URL=$NEXTCLOUD_URL environment-variables.NEXTCLOUD_USER=$NEXTCLOUD_USER
  only:
    refs:
      - main
    changes:
      - filter.json
  dependencies: []
